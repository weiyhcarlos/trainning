#!/bin/bash


PROG="agent.py"
PROG_PATH="/var/agent" 
PID_PATH="/var/run/"

start() 
{
    if [ -e "$PID_PATH/$PROG.pid" ]; then
        ## Program is running, exit with error.
        echo "Error! $PROG is currently running!" 1>&2
        exit 1
    else
	cd $PROG_PATH
        if [ -z "$1" ]; then
	    python $PROG >/dev/null 2>&1 &
	else
            PROG_ARGS=$@
            python $PROG -m $PROG_ARGS >/dev/null 2>&1 &
	fi
	pid=`ps -ef| grep  "python agent.py" |grep -v 'grep'| awk '{print $2}'`

        echo "$PROG started"
        echo $pid > "$PID_PATH/$PROG.pid"
    fi
}

stop() 
{
    if [ -e "$PID_PATH/$PROG.pid" ]; then
        ## Program is running, so stop it
	pid=`ps -ef| grep  "python agent.py" |grep -v 'grep'| awk '{print $2}'`
	kill -9 "$pid"
        
        rm -f  "$PID_PATH/$PROG.pid"
        echo "$PROG stopped"
    else
        ## Program is not running, exit with error.
        echo "Error! $PROG not started!" 1>&2
        exit 1
    fi
}
status()
{
    if [ -e "$PID_PATH/$PROG.pid" ]; then
	echo "service agent is running now!"
    else
	echo " service agent is not running."
    fi    
}
reload()
{
    cd $PROG_PATH
    if [ -z "$1" ]; then
         python $PROG >/dev/null 2>&1 &
    else
         PROG_ARGS=$@
         python $PROG -m $PROG_ARGS >/dev/null 2>&1 &
    fi
}

## Check to see if we are running as root first.
if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root" 1>&2
    exit 1
fi
case "$1" in
    start)
        start ${@:2}
        exit 0
    ;;
    stop)
        stop
        exit 0
    ;;
    restart)
        stop
        start ${@:2}
        exit 0
    ;;
    status)
	status
	exit 0
    ;;
    reload)
	reload ${@:2}
    **)
        echo "Usage: $0 {start|stop|restart|status|reload}" 1>&2
        exit 1
    ;;
esac
